name: Update and Validate Rules

on:
  push:
    branches: [ main ]
  pull_request:
    paths:
      - 'sources/clash-rules/*.yaml'
      - 'sources/loon-rules/*.list'

jobs:
  validate-and-update:
    runs-on: ubuntu-latest
    permissions:
      contents: write 
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Convert Rules
        run: |
          echo "当前目录: $(pwd)"
          echo "Loon规则文件列表:"
          ls -R sources/loon-rules/
          
          # 创建输出目录（如果不存在）并执行转换
          mkdir -p sources/clash-rules
          python scripts/convert_loon_to_clash.py \
            --input sources/loon-rules/*.list \
            --output sources/clash-rules/clash-rules.yaml
          
          echo "生成文件检查:"
          ls -l sources/clash-rules/
          
          - name: Validate Clash Rules
            run: |
          echo "检查 Clash 规则文件..."
          if ls sources/clash-rules/*.yaml 1> /dev/null 2>&1; then
            echo "发现 Clash 文件，开始验证..."
            python validate_clash.py sources/clash-rules/*.yaml
          else
            echo "未找到 Clash 规则文件，跳过验证。"
          fi

      - name: Validate Loon Rules
        run: |
          echo "检查 Loon 规则文件..."
          if ls sources/loon-rules/*.list 1> /dev/null 2>&1; then
            echo "发现 Loon 文件，开始验证..."
            python validate_loon.py sources/loon-rules/*.list
          else
            echo "未找到 Loon 规则文件，跳过验证。"
          fi


      - name: Commit Changes
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add sources/clash-rules/
          git diff --cached --quiet || git commit -m "自动转换Loon规则为Clash格式"
          git push origin main
